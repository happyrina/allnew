{"filter":false,"title":"main.js","tooltip":"/node/restful/routes/main.js","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":66,"column":16},"end":{"row":66,"column":19},"action":"insert","lines":[".id"],"id":434,"ignore":true}],[{"start":{"row":0,"column":0},"end":{"row":75,"column":21},"action":"remove","lines":["const express = require('express');","const bodyParser = require('body-parser');","","const app = express()","","app.use(bodyParser.json());","app.use(bodyParser.urlencoded({ extended: false }));","app.use(express.json());","app.use(express.urlencoded({ extended: true }));","","const users = [","        {id:1, name:\"User1\"},","        {id:2, name:\"User2\"},","        {id:3, name:\"User3\"}","]","","app.get('/hello', (req, res) => {","    res.send(\"Hello World~!!\\n\");","})","","","// request X , response O","app.get(\"/api/users\", (req, res) => {","    res.json({ok:true, users:users});","})","","// Query param, request O, response O","app.get(\"/api/users/user\", (req, res) => {","    const user_id = req.query.user_id","    const user = users.filter(data => data.id == user_id)","    res.json({ok:false, users:user});","})","","// Query param, request O, response O","app.get(\"/api/users/useridname\", (req, res) => {","    const {user_id, name}= req.query","    const user = users.filter(data => data.id == user_id && data.name == name)","    res.json({ok:false, users:user});","})","","","// Path param, request O, response O","app.get(\"/api/users/:user_id\", (req, res) => {","    const user_id = req.params.user_id","    const user = users.filter(data => data.id == user_id)","    res.json({ok:false, users:user});","})","","// post, request body o, response O","app.post(\"/api/users/userBody\", (req, res) => {","    const user_id = req.body.id","    const user = users.filter(data => data.id == user_id)","    res.json({ok:false, users:user});","})","","// post, request body o, response O","app.post(\"/api/users/add\", (req, res) => {","    const {id, name} = req.body","    const user = users.concat({id, name})","    res.json({ok:true, users:user});","})","","// put, request body o, response O","app.post(\"/api/users/update\", (req, res) => {","    const {id, name} = req.body","    const user = users.map(data => {","        if (data.id == id) data.name = name","        return {","            id : data.id,","            name : data.name","        }","    })","    res.json({ok:true, users:user});","})","","module.exports = app;"],"id":435,"ignore":true},{"start":{"row":0,"column":0},"end":{"row":73,"column":21},"action":"insert","lines":["const express = require('express');","const bodyParser = require('body-parser');","","const app = express()","","app.use(bodyParser.json());","app.use(bodyParser.urlencoded({ extended: false }));","app.use(express.json());","app.use(express.urlencoded({ extended: true }));","","const users = [","        {id:1, name:\"User1\"},","        {id:2, name:\"User2\"},","        {id:3, name:\"User3\"}","]","","app.get('/hello', (req, res) => {","    res.send(\"Hello World~!!\\n\");","})","","// request X , response O","app.get(\"/api/users\", (req, res) => {","    res.json({ok:true, users:users});","})","","// Query param, request O, response O","app.get(\"/api/users/user\", (req, res) => {","    const user_id = req.query.user_id","    const user = users.filter(data => data.id == user_id)","    res.json({ok:false, users:user});","})","","// Query param, request O, response O","app.get(\"/api/users/useridname\", (req, res) => {","    const {user_id, name }= req.query","    const user = users.filter(data => data.id == user_id && data.name == name)","    res.json({ok:false, users:user});","})","","// Path param, request O, response O","app.get(\"/api/users/:user_id\", (req, res) => {","    const user_id = req.params.user_id","    const user = users.filter(data => data.id == user_id)","    res.json({ok:false, users:user});","})","","// post, request body Om response O","app.post(\"/api/users/userBody\", (req, res) => {","    const user_id = req.body.id","    const user = users.filter(data => data.id == user_id)","    res.json({ok:false, users:user});","})","","// post, request body Om response O","app.post(\"/api/users/add\", (req, res) => {","    const { id, name } = req.body","    const user = users.concat({id, name})","    res.json({ok:true, users:user});","})","","// put, request body Om response O","app.put(\"/api/users/update\", (req, res) => {","    const { id, name } = req.body","    const user = users.map(data => {","       if (data.id == id) data.name = name","       return {","          id : data.id,","          name : data.name","       }","    })","    res.json({ok:true, users:user});","})","","module.exports = app;"]}],[{"start":{"row":71,"column":2},"end":{"row":84,"column":2},"action":"insert","lines":["","","// put, request body Om response O","app.put(\"/api/users/update\", (req, res) => {","    const { id, name } = req.body","    const user = users.map(data => {","       if (data.id == id) data.name = name","       return {","          id : data.id,","          name : data.name","       }","    })","    res.json({ok:true, users:user});","})"],"id":436,"ignore":true}],[{"start":{"row":73,"column":0},"end":{"row":74,"column":0},"action":"remove","lines":["// put, request body Om response O",""],"id":437,"ignore":true},{"start":{"row":73,"column":0},"end":{"row":73,"column":1},"action":"insert","lines":["p"]}],[{"start":{"row":73,"column":0},"end":{"row":73,"column":1},"action":"remove","lines":["p"],"id":438,"ignore":true},{"start":{"row":73,"column":0},"end":{"row":74,"column":0},"action":"insert","lines":["// patch, request body Om response O",""]}],[{"start":{"row":73,"column":18},"end":{"row":73,"column":22},"action":"remove","lines":["body"],"id":439,"ignore":true},{"start":{"row":73,"column":18},"end":{"row":73,"column":22},"action":"insert","lines":["para"]}],[{"start":{"row":73,"column":22},"end":{"row":73,"column":24},"action":"insert","lines":["ms"],"id":440,"ignore":true}],[{"start":{"row":73,"column":27},"end":{"row":73,"column":28},"action":"remove","lines":[" "],"id":441,"ignore":true}],[{"start":{"row":73,"column":26},"end":{"row":73,"column":27},"action":"remove","lines":["m"],"id":442,"ignore":true}],[{"start":{"row":73,"column":26},"end":{"row":73,"column":28},"action":"insert","lines":[", "],"id":443,"ignore":true}],[{"start":{"row":73,"column":24},"end":{"row":73,"column":25},"action":"insert","lines":[" "],"id":444,"ignore":true}],[{"start":{"row":73,"column":25},"end":{"row":73,"column":26},"action":"insert","lines":["&"],"id":445,"ignore":true}],[{"start":{"row":73,"column":26},"end":{"row":73,"column":27},"action":"insert","lines":[" "],"id":446,"ignore":true}],[{"start":{"row":73,"column":27},"end":{"row":73,"column":31},"action":"insert","lines":["body"],"id":447,"ignore":true}],[{"start":{"row":60,"column":22},"end":{"row":60,"column":23},"action":"remove","lines":["m"],"id":448,"ignore":true},{"start":{"row":60,"column":22},"end":{"row":60,"column":23},"action":"insert","lines":[","]}],[{"start":{"row":74,"column":26},"end":{"row":74,"column":28},"action":"insert","lines":["/:"],"id":449,"ignore":true}],[{"start":{"row":74,"column":28},"end":{"row":74,"column":32},"action":"insert","lines":["user"],"id":450,"ignore":true}],[{"start":{"row":74,"column":32},"end":{"row":74,"column":35},"action":"insert","lines":["_id"],"id":451,"ignore":true}],[{"start":{"row":75,"column":12},"end":{"row":75,"column":20},"action":"remove","lines":["id, name"],"id":452,"ignore":true}],[{"start":{"row":75,"column":13},"end":{"row":75,"column":14},"action":"remove","lines":["}"],"id":453,"ignore":true}],[{"start":{"row":75,"column":10},"end":{"row":75,"column":13},"action":"remove","lines":["{  "],"id":454,"ignore":true}],[{"start":{"row":75,"column":9},"end":{"row":75,"column":10},"action":"remove","lines":[" "],"id":455,"ignore":true}],[{"start":{"row":75,"column":9},"end":{"row":75,"column":12},"action":"insert","lines":[" us"],"id":456,"ignore":true}],[{"start":{"row":75,"column":12},"end":{"row":75,"column":16},"action":"insert","lines":["erid"],"id":457,"ignore":true}],[{"start":{"row":75,"column":14},"end":{"row":75,"column":16},"action":"remove","lines":["id"],"id":458,"ignore":true}],[{"start":{"row":75,"column":14},"end":{"row":75,"column":16},"action":"insert","lines":["_i"],"id":459,"ignore":true}],[{"start":{"row":75,"column":16},"end":{"row":75,"column":17},"action":"insert","lines":["d"],"id":460,"ignore":true}],[{"start":{"row":75,"column":28},"end":{"row":76,"column":4},"action":"insert","lines":["","    "],"id":461,"ignore":true}],[{"start":{"row":76,"column":4},"end":{"row":76,"column":5},"action":"insert","lines":["o"],"id":462,"ignore":true}],[{"start":{"row":76,"column":4},"end":{"row":76,"column":5},"action":"remove","lines":["o"],"id":463,"ignore":true},{"start":{"row":76,"column":4},"end":{"row":76,"column":5},"action":"insert","lines":["c"]}],[{"start":{"row":76,"column":5},"end":{"row":76,"column":7},"action":"insert","lines":["on"],"id":464,"ignore":true}],[{"start":{"row":76,"column":7},"end":{"row":76,"column":9},"action":"insert","lines":["st"],"id":465,"ignore":true}],[{"start":{"row":76,"column":9},"end":{"row":76,"column":12},"action":"insert","lines":[" na"],"id":466,"ignore":true}],[{"start":{"row":76,"column":12},"end":{"row":76,"column":15},"action":"insert","lines":["me "],"id":467,"ignore":true}],[{"start":{"row":76,"column":15},"end":{"row":76,"column":17},"action":"insert","lines":["= "],"id":468,"ignore":true}],[{"start":{"row":76,"column":17},"end":{"row":76,"column":19},"action":"insert","lines":["re"],"id":469,"ignore":true}],[{"start":{"row":76,"column":19},"end":{"row":76,"column":21},"action":"insert","lines":["q."],"id":470,"ignore":true}],[{"start":{"row":76,"column":21},"end":{"row":76,"column":25},"action":"insert","lines":["body"],"id":471,"ignore":true}],[{"start":{"row":75,"column":24},"end":{"row":75,"column":27},"action":"remove","lines":["bod"],"id":472,"ignore":true}],[{"start":{"row":75,"column":24},"end":{"row":75,"column":25},"action":"remove","lines":["y"],"id":473,"ignore":true},{"start":{"row":75,"column":24},"end":{"row":75,"column":25},"action":"insert","lines":["p"]}],[{"start":{"row":75,"column":25},"end":{"row":75,"column":28},"action":"insert","lines":["ara"],"id":474,"ignore":true}],[{"start":{"row":75,"column":28},"end":{"row":75,"column":29},"action":"insert","lines":["m"],"id":475,"ignore":true}],[{"start":{"row":75,"column":29},"end":{"row":75,"column":30},"action":"insert","lines":["s"],"id":476,"ignore":true}],[{"start":{"row":78,"column":22},"end":{"row":78,"column":26},"action":"insert","lines":["user"],"id":477,"ignore":true}],[{"start":{"row":78,"column":26},"end":{"row":78,"column":27},"action":"insert","lines":["_"],"id":478,"ignore":true}],[{"start":{"row":74,"column":4},"end":{"row":74,"column":7},"action":"remove","lines":["put"],"id":479,"ignore":true},{"start":{"row":74,"column":4},"end":{"row":74,"column":8},"action":"insert","lines":["patc"]}],[{"start":{"row":74,"column":8},"end":{"row":74,"column":9},"action":"insert","lines":["h"],"id":480,"ignore":true}],[{"start":{"row":75,"column":11},"end":{"row":75,"column":15},"action":"remove","lines":["ser_"],"id":481,"ignore":true}],[{"start":{"row":75,"column":10},"end":{"row":75,"column":11},"action":"remove","lines":["u"],"id":482,"ignore":true}],[{"start":{"row":78,"column":24},"end":{"row":78,"column":27},"action":"remove","lines":["er_"],"id":483,"ignore":true}],[{"start":{"row":78,"column":22},"end":{"row":78,"column":24},"action":"remove","lines":["us"],"id":484,"ignore":true}],[{"start":{"row":75,"column":10},"end":{"row":75,"column":15},"action":"insert","lines":["user_"],"id":485,"ignore":true},{"start":{"row":78,"column":22},"end":{"row":78,"column":27},"action":"insert","lines":["user_"]}],[{"start":{"row":76,"column":10},"end":{"row":76,"column":11},"action":"insert","lines":["{"],"id":486,"ignore":true}],[{"start":{"row":76,"column":15},"end":{"row":76,"column":16},"action":"insert","lines":["}"],"id":487,"ignore":true}],[{"start":{"row":75,"column":10},"end":{"row":75,"column":11},"action":"insert","lines":["{"],"id":488,"ignore":true}],[{"start":{"row":75,"column":18},"end":{"row":75,"column":19},"action":"insert","lines":["}"],"id":489,"ignore":true}],[{"start":{"row":85,"column":2},"end":{"row":87,"column":0},"action":"insert","lines":["","",""],"id":490,"ignore":true}],[{"start":{"row":87,"column":0},"end":{"row":99,"column":2},"action":"insert","lines":["// patch, request params & body O, response O","app.patch(\"/api/users/update/:user_id\", (req, res) => {","    const {user_id} = req.params","    const {name} = req.body","    const user = users.map(data => {","       if (data.id == user_id) data.name = name","       return {","          id : data.id,","          name : data.name","       }","    })","    res.json({ok:true, users:user});","})"],"id":491,"ignore":true}],[{"start":{"row":88,"column":4},"end":{"row":88,"column":9},"action":"remove","lines":["patch"],"id":492,"ignore":true},{"start":{"row":88,"column":4},"end":{"row":88,"column":10},"action":"insert","lines":["delete"]}],[{"start":{"row":88,"column":23},"end":{"row":88,"column":38},"action":"remove","lines":["update/:user_id"],"id":493,"ignore":true},{"start":{"row":88,"column":23},"end":{"row":88,"column":29},"action":"insert","lines":["delete"]}],[{"start":{"row":88,"column":47},"end":{"row":89,"column":32},"action":"remove","lines":["","    const {user_id} = req.params"],"id":494,"ignore":true}],[{"start":{"row":89,"column":10},"end":{"row":89,"column":16},"action":"remove","lines":["{name}"],"id":495,"ignore":true}],[{"start":{"row":89,"column":10},"end":{"row":89,"column":12},"action":"insert","lines":["id"],"id":496,"ignore":true}],[{"start":{"row":89,"column":10},"end":{"row":89,"column":14},"action":"insert","lines":["user"],"id":497,"ignore":true}],[{"start":{"row":89,"column":14},"end":{"row":89,"column":15},"action":"insert","lines":["_"],"id":498,"ignore":true}],[{"start":{"row":89,"column":10},"end":{"row":89,"column":11},"action":"insert","lines":["{"],"id":499,"ignore":true}],[{"start":{"row":89,"column":18},"end":{"row":89,"column":19},"action":"insert","lines":["}"],"id":500,"ignore":true}],[{"start":{"row":89,"column":4},"end":{"row":97,"column":36},"action":"remove","lines":["const {user_id} = req.body","    const user = users.map(data => {","       if (data.id == user_id) data.name = name","       return {","          id : data.id,","          name : data.name","       }","    })","    res.json({ok:true, users:user});"],"id":501,"ignore":true},{"start":{"row":89,"column":4},"end":{"row":91,"column":37},"action":"insert","lines":["    const user_id = req.params.user_id","    const user = users.filter(data => data.id == user_id)","    res.json({ok:false, users:user});"]}],[{"start":{"row":89,"column":4},"end":{"row":89,"column":8},"action":"remove","lines":["    "],"id":502,"ignore":true}],[{"start":{"row":89,"column":10},"end":{"row":89,"column":11},"action":"insert","lines":["{"],"id":503,"ignore":true}],[{"start":{"row":89,"column":18},"end":{"row":89,"column":19},"action":"insert","lines":["}"],"id":504,"ignore":true}],[{"start":{"row":89,"column":26},"end":{"row":89,"column":40},"action":"remove","lines":["params.user_id"],"id":505,"ignore":true},{"start":{"row":89,"column":26},"end":{"row":89,"column":30},"action":"insert","lines":["body"]}],[{"start":{"row":90,"column":46},"end":{"row":90,"column":47},"action":"remove","lines":["="],"id":506,"ignore":true}],[{"start":{"row":90,"column":46},"end":{"row":90,"column":47},"action":"insert","lines":["!"],"id":507,"ignore":true}],[{"start":{"row":87,"column":3},"end":{"row":87,"column":8},"action":"remove","lines":["patch"],"id":508,"ignore":true},{"start":{"row":87,"column":3},"end":{"row":87,"column":6},"action":"insert","lines":["del"]}],[{"start":{"row":87,"column":6},"end":{"row":87,"column":7},"action":"insert","lines":["e"],"id":509,"ignore":true}],[{"start":{"row":87,"column":7},"end":{"row":87,"column":9},"action":"insert","lines":["te"],"id":510,"ignore":true}],[{"start":{"row":87,"column":27},"end":{"row":87,"column":29},"action":"insert","lines":["\\\\"],"id":511,"ignore":true}],[{"start":{"row":87,"column":27},"end":{"row":87,"column":29},"action":"remove","lines":["\\\\"],"id":512,"ignore":true}],[{"start":{"row":87,"column":24},"end":{"row":87,"column":27},"action":"remove","lines":["s &"],"id":513,"ignore":true}],[{"start":{"row":87,"column":22},"end":{"row":87,"column":24},"action":"remove","lines":["am"],"id":514,"ignore":true}],[{"start":{"row":87,"column":19},"end":{"row":87,"column":22},"action":"remove","lines":["par"],"id":515,"ignore":true}],[{"start":{"row":87,"column":17},"end":{"row":87,"column":19},"action":"remove","lines":["t "],"id":516,"ignore":true}],[{"start":{"row":87,"column":17},"end":{"row":87,"column":18},"action":"insert","lines":["t"],"id":517,"ignore":true}],[{"start":{"row":87,"column":3},"end":{"row":87,"column":7},"action":"remove","lines":["dele"],"id":519},{"start":{"row":87,"column":3},"end":{"row":87,"column":5},"action":"insert","lines":["pa"]},{"start":{"row":87,"column":6},"end":{"row":87,"column":7},"action":"remove","lines":["e"]},{"start":{"row":87,"column":6},"end":{"row":87,"column":8},"action":"insert","lines":["ch"]},{"start":{"row":87,"column":17},"end":{"row":87,"column":26},"action":"insert","lines":[" params &"]}],[{"start":{"row":32,"column":0},"end":{"row":32,"column":3},"action":"insert","lines":["// "],"id":520,"ignore":true},{"start":{"row":33,"column":0},"end":{"row":33,"column":3},"action":"insert","lines":["// "]},{"start":{"row":34,"column":0},"end":{"row":34,"column":3},"action":"insert","lines":["// "]},{"start":{"row":35,"column":0},"end":{"row":35,"column":3},"action":"insert","lines":["// "]},{"start":{"row":36,"column":0},"end":{"row":36,"column":3},"action":"insert","lines":["// "]},{"start":{"row":37,"column":0},"end":{"row":37,"column":3},"action":"insert","lines":["// "]},{"start":{"row":37,"column":5},"end":{"row":39,"column":0},"action":"insert","lines":["","",""]}],[{"start":{"row":27,"column":37},"end":{"row":28,"column":18},"action":"insert","lines":["","    if (req.query)"],"id":521,"ignore":true}],[{"start":{"row":28,"column":17},"end":{"row":28,"column":30},"action":"insert","lines":[".name -- null"],"id":522,"ignore":true},{"start":{"row":28,"column":31},"end":{"row":30,"column":5},"action":"insert","lines":[" {","        ","    }"]}],[{"start":{"row":29,"column":8},"end":{"row":29,"column":14},"action":"insert","lines":["const "],"id":523,"ignore":true},{"start":{"row":30,"column":5},"end":{"row":31,"column":57},"action":"remove","lines":["","    const user = users.filter(data => data.id == user_id)"]}],[{"start":{"row":29,"column":14},"end":{"row":29,"column":43},"action":"insert","lines":["user = users.filter(data => )"],"id":524,"ignore":true}],[{"start":{"row":29,"column":42},"end":{"row":29,"column":58},"action":"insert","lines":["data.id == user_"],"id":525,"ignore":true}],[{"start":{"row":29,"column":8},"end":{"row":29,"column":13},"action":"remove","lines":["const"],"id":526,"ignore":true},{"start":{"row":29,"column":8},"end":{"row":29,"column":11},"action":"insert","lines":["let"]},{"start":{"row":29,"column":56},"end":{"row":29,"column":58},"action":"insert","lines":["id"]}],[{"start":{"row":30,"column":5},"end":{"row":32,"column":5},"action":"insert","lines":[" else {","        let user = ","    }"],"id":527,"ignore":true}],[{"start":{"row":31,"column":19},"end":{"row":31,"column":51},"action":"insert","lines":["users.filter(data => data.id ==)"],"id":528,"ignore":true}],[{"start":{"row":31,"column":50},"end":{"row":31,"column":73},"action":"insert","lines":[" user_id && data.name -"],"id":529,"ignore":true}],[{"start":{"row":31,"column":72},"end":{"row":31,"column":73},"action":"remove","lines":["-"],"id":530,"ignore":true},{"start":{"row":31,"column":72},"end":{"row":31,"column":79},"action":"insert","lines":["== name"]}],[{"start":{"row":27,"column":10},"end":{"row":27,"column":11},"action":"insert","lines":["{"],"id":531,"ignore":true},{"start":{"row":27,"column":18},"end":{"row":27,"column":25},"action":"insert","lines":[", name}"]}],[{"start":{"row":27,"column":37},"end":{"row":27,"column":45},"action":"remove","lines":[".user_id"],"id":532,"ignore":true}],[{"start":{"row":26,"column":42},"end":{"row":27,"column":5},"action":"insert","lines":["","    l"],"id":533,"ignore":true}],[{"start":{"row":27,"column":5},"end":{"row":27,"column":12},"action":"insert","lines":["et user"],"id":534,"ignore":true}],[{"start":{"row":0,"column":0},"end":{"row":101,"column":21},"action":"remove","lines":["const express = require('express');","const bodyParser = require('body-parser');","","const app = express()","","app.use(bodyParser.json());","app.use(bodyParser.urlencoded({ extended: false }));","app.use(express.json());","app.use(express.urlencoded({ extended: true }));","","const users = [","        {id:1, name:\"User1\"},","        {id:2, name:\"User2\"},","        {id:3, name:\"User3\"}","]","","app.get('/hello', (req, res) => {","    res.send(\"Hello World~!!\\n\");","})","","// request X , response O","app.get(\"/api/users\", (req, res) => {","    res.json({ok:true, users:users});","})","","// Query param, request O, response O","app.get(\"/api/users/user\", (req, res) => {","    let user","    const {user_id, name} = req.query","    if (req.query.name -- null) {","        let user = users.filter(data => data.id == user_id)","    } else {","        let user = users.filter(data => data.id == user_id && data.name == name)","    }","    res.json({ok:false, users:user});","})","","// // Query param, request O, response O","// app.get(\"/api/users/useridname\", (req, res) => {","//     const {user_id, name }= req.query","//     const user = users.filter(data => data.id == user_id && data.name == name)","//     res.json({ok:false, users:user});","// })","","","","// Path param, request O, response O","app.get(\"/api/users/:user_id\", (req, res) => {","    const user_id = req.params.user_id","    const user = users.filter(data => data.id == user_id)","    res.json({ok:false, users:user});","})","","// post, request body Om response O","app.post(\"/api/users/userBody\", (req, res) => {","    const user_id = req.body.id","    const user = users.filter(data => data.id == user_id)","    res.json({ok:false, users:user});","})","","// post, request body Om response O","app.post(\"/api/users/add\", (req, res) => {","    const { id, name } = req.body","    const user = users.concat({id, name})","    res.json({ok:true, users:user});","})","","// put, request body O, response O","app.put(\"/api/users/update\", (req, res) => {","    const { id, name } = req.body","    const user = users.map(data => {","       if (data.id == id) data.name = name","       return {","          id : data.id,","          name : data.name","       }","    })","    res.json({ok:true, users:user});","})","","// patch, request params & body O, response O","app.patch(\"/api/users/update/:user_id\", (req, res) => {","    const {user_id} = req.params","    const {name} = req.body","    const user = users.map(data => {","       if (data.id == user_id) data.name = name","       return {","          id : data.id,","          name : data.name","       }","    })","    res.json({ok:true, users:user});","})","","// patch, request params & body O, response O","app.delete(\"/api/users/delete\", (req, res) => {","    const {user_id} = req.body","    const user = users.filter(data => data.id != user_id)","    res.json({ok:false, users:user});","})","","module.exports = app;"],"id":535},{"start":{"row":0,"column":0},"end":{"row":93,"column":0},"action":"insert","lines":["const express = require('express');","const bodyParser = require('body-parser');","","const app = express()","","app.use(bodyParser.json());","app.use(bodyParser.urlencoded({ extended: false }));","app.use(express.json());","app.use(express.urlencoded({ extended: true }));","","const users = [","        {id:1, name:\"User1\"},","        {id:2, name:\"User2\"},","        {id:3, name:\"User3\"}","]","","app.get('/hello', (req, res) => {","    res.send(\"Hello World~!!\");","})","","// request X , response O","app.get(\"/api/users\", (req, res) => {","    res.json({ok:true, users:users});","})","","// Query param, request O, response O","app.get(\"/api/users/user\", (req, res) => {","    let user = \"\";","    const { user_id, name } = req.query","    if (req.query.name == null) {","        user = users.filter(data => data.id == user_id)","    } else {","        user = users.filter(data => data.id == user_id && data.name == name)","    }","    res.json({ok:false, users:user});","})","","// Path param, request O, response O","app.get(\"/api/users/:user_id\", (req, res) => {","    const user_id = req.params.user_id","    const user = users.filter(data => data.id == user_id)","    res.json({ok:false, users:user});","})","","// post, request body O, response O","app.post(\"/api/users/userBody\", (req, res) => {","    const user_id = req.body.id","    const user = users.filter(data => data.id == user_id)","    res.json({ok:false, users:user});","})","","// post, request body O, response O","app.post(\"/api/users/add\", (req, res) => {","    const { id, name } = req.body","    const user = users.concat({ id, name})","    res.json({ok:true, users:user});","})","","// put, request body O, response O","app.put(\"/api/users/update\", (req, res) => {","    const { id, name } = req.body","    const user = users.map(data => {","        if (data.id == id) data.name = name","        return {","            id : data.id,","            name : data.name","        }","    })","    res.json({ok:true, users:user});","})","","// patch, request params & body O, response O","app.patch(\"/api/users/update/:user_id\", (req, res) => {","    const { user_id } = req.params","    const { name } = req.body","    const user = users.map(data => {","        if (data.id == user_id) data.name = name","        return {","            id : data.id,","            name : data.name","        }","    })","    res.json({ok:true, users:user});","})","","// delete, request body O, response O","app.delete(\"/api/users/delete\", (req, res) => {","    const { user_id } = req.body","    const user = users.filter(data => data.id != user_id)","    res.json({ok:false, users:user});","})","","module.exports = app;",""]}]]},"ace":{"folds":[],"scrolltop":903,"scrollleft":0,"selection":{"start":{"row":93,"column":0},"end":{"row":93,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":{"row":9,"state":"start","mode":"ace/mode/javascript"}},"timestamp":1687932834374,"hash":"a08c8197b6228eddd6702afe98397889705127cc"}